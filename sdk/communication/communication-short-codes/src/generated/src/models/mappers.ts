/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const ShortCodes: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ShortCodes",
    modelProperties: {
      shortCodes: {
        serializedName: "shortCodes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ShortCode"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ShortCode: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ShortCode",
    modelProperties: {
      number: {
        serializedName: "number",
        type: {
          name: "String"
        }
      },
      numberType: {
        serializedName: "numberType",
        type: {
          name: "Enum",
          allowedValues: ["shortCode", "alphaId"]
        }
      },
      countryCode: {
        serializedName: "countryCode",
        type: {
          name: "String"
        }
      },
      programBriefIds: {
        serializedName: "programBriefIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      purchaseDate: {
        serializedName: "purchaseDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const CommunicationErrorResponse: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CommunicationError"
        }
      }
    }
  }
};

export const CommunicationError: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationError"
            }
          }
        }
      },
      innerError: {
        serializedName: "innererror",
        type: {
          name: "Composite",
          className: "CommunicationError"
        }
      }
    }
  }
};

export const USProgramBrief: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "USProgramBrief",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Enum",
          allowedValues: [
            "submitted",
            "approved",
            "submitNewVanityNumbers",
            "updateProgramBrief",
            "draft",
            "denied"
          ]
        }
      },
      number: {
        serializedName: "number",
        type: {
          name: "String"
        }
      },
      notes: {
        serializedName: "notes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Note"
            }
          }
        }
      },
      costs: {
        serializedName: "costs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ShortCodeCost"
            }
          }
        }
      },
      submissionDate: {
        serializedName: "submissionDate",
        type: {
          name: "DateTime"
        }
      },
      statusUpdatedDate: {
        serializedName: "statusUpdatedDate",
        type: {
          name: "DateTime"
        }
      },
      programDetails: {
        serializedName: "programDetails",
        type: {
          name: "Composite",
          className: "ProgramDetails"
        }
      },
      companyInformation: {
        serializedName: "companyInformation",
        type: {
          name: "Composite",
          className: "CompanyInformation"
        }
      },
      messageDetails: {
        serializedName: "messageDetails",
        type: {
          name: "Composite",
          className: "MessageDetails"
        }
      },
      trafficDetails: {
        serializedName: "trafficDetails",
        type: {
          name: "Composite",
          className: "TrafficDetails"
        }
      }
    }
  }
};

export const Note: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Note",
    modelProperties: {
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      date: {
        serializedName: "date",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ShortCodeCost: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ShortCodeCost",
    modelProperties: {
      amount: {
        serializedName: "amount",
        required: true,
        type: {
          name: "Number"
        }
      },
      currencyCode: {
        serializedName: "currencyCode",
        required: true,
        type: {
          name: "String"
        }
      },
      billingFrequency: {
        serializedName: "billingFrequency",
        required: true,
        type: {
          name: "Enum",
          allowedValues: ["monthly", "once"]
        }
      }
    }
  }
};

export const ProgramDetails: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProgramDetails",
    modelProperties: {
      isVanity: {
        serializedName: "isVanity",
        type: {
          name: "Boolean"
        }
      },
      preferredVanityNumbers: {
        serializedName: "preferredVanityNumbers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      numberType: {
        serializedName: "numberType",
        type: {
          name: "Enum",
          allowedValues: ["shortCode", "alphaId"]
        }
      },
      isPoliticalCampaign: {
        serializedName: "isPoliticalCampaign",
        type: {
          name: "Boolean"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      signUpTypes: {
        serializedName: "signUpTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "website",
                "pointOfSale",
                "sms",
                "interactiveVoiceResponse"
              ]
            }
          }
        }
      },
      signUpUrl: {
        serializedName: "signUpUrl",
        type: {
          name: "String"
        }
      },
      termsOfServiceUrl: {
        serializedName: "termsOfServiceUrl",
        type: {
          name: "String"
        }
      },
      privacyPolicyUrl: {
        serializedName: "privacyPolicyUrl",
        type: {
          name: "String"
        }
      },
      expectedDateOfService: {
        serializedName: "expectedDateOfService",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const CompanyInformation: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CompanyInformation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      contactInformation: {
        serializedName: "contactInformation",
        type: {
          name: "Composite",
          className: "ContactInformation"
        }
      },
      customerCareInformation: {
        serializedName: "customerCareInformation",
        type: {
          name: "Composite",
          className: "CustomerCareInformation"
        }
      }
    }
  }
};

export const ContactInformation: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContactInformation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      phone: {
        serializedName: "phone",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomerCareInformation: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomerCareInformation",
    modelProperties: {
      tollFreeNumber: {
        serializedName: "tollFreeNumber",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MessageDetails: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MessageDetails",
    modelProperties: {
      types: {
        serializedName: "types",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["sms", "mms"]
            }
          }
        }
      },
      recurrence: {
        serializedName: "recurrence",
        type: {
          name: "Enum",
          allowedValues: ["subscription", "transaction"]
        }
      },
      contentTypes: {
        serializedName: "contentTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "ringTones",
                "smsChat",
                "video",
                "loyaltyProgramPointsPrizes",
                "gifting",
                "inApplicationBilling",
                "textToScreen",
                "games",
                "audioChat",
                "mmsPictures",
                "sweepstakesContestAuction",
                "financialBanking",
                "premiumWap",
                "queryService",
                "wallpaperScreensaver",
                "voting",
                "application",
                "mobileGivingDonations",
                "coupons",
                "loyaltyProgram",
                "noPointsPrizes",
                "informationalAlerts",
                "microBilling",
                "trivia",
                "entertainmentAlerts",
                "other"
              ]
            }
          }
        }
      },
      optInMessage: {
        serializedName: "optInMessage",
        type: {
          name: "String"
        }
      },
      optInReply: {
        serializedName: "optInReply",
        type: {
          name: "String"
        }
      },
      confirmationMessage: {
        serializedName: "confirmationMessage",
        type: {
          name: "String"
        }
      },
      useCase: {
        serializedName: "useCase",
        type: {
          name: "Enum",
          allowedValues: ["oneWay", "twoWay"]
        }
      }
    }
  }
};

export const TrafficDetails: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrafficDetails",
    modelProperties: {
      estimatedVolume: {
        serializedName: "estimatedVolume",
        type: {
          name: "Number"
        }
      },
      monthlyAverageMessagesFromUser: {
        serializedName: "monthlyAverageMessagesFromUser",
        type: {
          name: "Number"
        }
      },
      monthlyAverageMessagesToUser: {
        serializedName: "monthlyAverageMessagesToUser",
        type: {
          name: "Number"
        }
      },
      isSpiky: {
        serializedName: "isSpiky",
        type: {
          name: "Boolean"
        }
      },
      spikeDetails: {
        serializedName: "spikeDetails",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const USProgramBriefs: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "USProgramBriefs",
    modelProperties: {
      programBriefs: {
        serializedName: "programBriefs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "USProgramBrief"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
